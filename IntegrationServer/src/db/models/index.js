'use strict'; 
//Autogenerated using Sequelize-CLI
const fs = require('fs');
const path = require('path');
const Sequelize = require('sequelize');
const basename = path.basename(__filename);
const env = process.env.NODE_ENV || 'development';
const config = require(__dirname + '/../config/db.config.json')[env];
const db = {};

/**
  Establishes a connection to a database using the provided configuration.
  If the configuration specifies the use of an environment variable, the value of that variable is used as the database URI.
  @param {Object} config - The configuration object containing database connection information.
  @returns {Object} A Sequelize instance representing the connection to the database.
*/

let sequelize;
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config);
} else {
  sequelize = new Sequelize(config.database, config.username, config.password, config);
}

/**
  Reads all files in the current directory synchronously and filters out any that don't end in ".js" or start with a ".".
  For each remaining file, requires the file as a model module and adds the resulting model to the provided "db" object.
  @param {Object} db - The database object to add models to.
*/

fs
  .readdirSync(__dirname)
  .filter(file => {
    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');
  })
  .forEach(file => {
    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);
    db[model.name] = model;
  });

/**
  Loops through each model in the provided database object and calls its "associate" method,
  if it exists.
  @param {object} db - The database object to loop through and call "associate" on each model.
  @returns {void}
*/

Object.keys(db).forEach(modelName => {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});

/* Export the db object. */
db.sequelize = sequelize;
db.Sequelize = Sequelize;

module.exports = db;
